<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3889C9BE-0473-4B41-80E8-C4C923E837E7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MsgPack</RootNamespace>
    <AssemblyName>MsgPack.UnitTest</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;SKIP_LARGE_TEST</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'PerformanceTest|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\PerformanceTest\</OutputPath>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\..\src\MsgPack.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Instrument|AnyCPU'">
    <OutputPath>bin\Instrument\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisIgnoreBuiltInRuleSets>true</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisIgnoreBuiltInRules>true</CodeAnalysisIgnoreBuiltInRules>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'CodeAnalysis|AnyCPU'">
    <OutputPath>bin\CodeAnalysis\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>
    <CodeAnalysisFailOnMissingRules>false</CodeAnalysisFailOnMissingRules>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'CoreProfile|AnyCPU'">
    <OutputPath>bin\CoreProfile\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="nunit.framework, Version=2.6.2.12296, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\..\packages\NUnit.2.6.2\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Runtime.Serialization" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="BigEndianBinaryTest.cs" />
    <Compile Include="CollectionAssertEx.cs" />
    <Compile Include="DirectConversionTest.cs" />
    <Compile Include="DirectConversionTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>DirectConversionTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Include="EqualsTest.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="ExceptionTest.cs" />
    <Compile Include="GenericExceptionTester.cs" />
    <Compile Include="Image.cs" />
    <Compile Include="MessagePackConvertTest.cs" />
    <Compile Include="MessagePackExtendedTypeObjectTest.cs" />
    <Compile Include="MessagePackObjectDictionaryTest.cs" />
    <Compile Include="MessagePackObjectTest.Conversion.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Conversion.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.Equals.cs" />
    <Compile Include="MessagePackObjectTest.Equals.Integer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Equals.Integer.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.Equals.Real.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Equals.Real.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.Exceptionals.Conversion.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.Exceptionals.Conversion.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.Exceptionals.cs" />
    <Compile Include="MessagePackObjectTest.IPackable.cs" />
    <Compile Include="MessagePackObjectTest.IsTypeOf.Array.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Array.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.IsTypeOf.cs" />
    <Compile Include="MessagePackObjectTest.IsTypeOf.Integer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Integer.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.IsTypeOf.Map.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Map.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.IsTypeOf.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MessagePackObjectTest.IsTypeOf.Raw.tt</DependentUpon>
    </Compile>
    <Compile Include="MessagePackObjectTest.Miscs.cs" />
    <Compile Include="MessagePackObjectTest.Objects.cs" />
    <Compile Include="MessagePackObjectTest.RuntimeSerialization.cs" />
    <Compile Include="MessagePackObjectTest.Strings.cs" />
    <Compile Include="MessagePackStringTest.cs" />
    <Compile Include="MessageUnpackableTest.cs" />
    <Compile Include="PackerTest.Miscs.cs" />
    <Compile Include="PackerTest.Pack.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.Pack.tt</DependentUpon>
    </Compile>
    <Compile Include="PackerTest.PackObject.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.PackObject.tt</DependentUpon>
    </Compile>
    <Compile Include="PackerTest.PackT.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackerTest.PackT.tt</DependentUpon>
    </Compile>
    <Compile Include="PackerTest.Pack.Miscs.cs" />
    <Compile Include="PackUnpackTest.cs" />
    <Compile Include="PackUnpackTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>PackUnpackTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Serialization\AddOnlyCollection`1.cs" />
    <Compile Include="Serialization\ArrayContextBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\ArrayExpressionBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\ArrayFieldBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\ArraySegmentEqualityComparer`1.cs" />
    <Compile Include="Serialization\AutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\AutoMessagePackSerializerTest.Types.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>AutoMessagePackSerializerTest.Types.tt</DependentUpon>
    </Compile>
    <Compile Include="Serialization\ComplexType.cs" />
    <Compile Include="Serialization\ComplexTypeWithDataContractWithOrder.cs" />
    <Compile Include="Serialization\ComplexTypeWithOneBaseOrder.cs" />
    <Compile Include="Serialization\ComplexTypeWithoutAnyAttribute.cs" />
    <Compile Include="Serialization\ComplexTypeWithTwoMember.cs" />
    <Compile Include="Serialization\CompositeTest.cs" />
    <Compile Include="Serialization\DataContractAndNonSerializedMixedTarget.cs" />
    <Compile Include="Serialization\DataMemberAttributeNamedPropertyTestTarget.cs" />
    <Compile Include="Serialization\FromExpressionTest.cs" />
    <Compile Include="Serialization\IVerifiable.cs" />
    <Compile Include="Serialization\IVerifiable`1.cs" />
    <Compile Include="Serialization\MapContextBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\MapExpressionBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\MapFieldBasedAutoMessagePackSerializerTest.cs" />
    <Compile Include="Serialization\MessagePackMemberAndDataMemberMixedTarget.cs" />
    <Compile Include="Serialization\MessagePackMemberAttributeTest.cs" />
    <Compile Include="Serialization\MessagePackSerializerTest.cs" />
    <Compile Include="Serialization\MessagePackSerializerTTest.cs" />
    <Compile Include="Serialization\MillisecondsDateTimeComparer.cs" />
    <Compile Include="Serialization\MillisecondsDateTimeOffsetComparer.cs" />
    <Compile Include="Serialization\NilImplicationTest.cs" />
    <Compile Include="Serialization\NilImplicationTestTarget.cs" />
    <Compile Include="PackerTest.cs" />
    <Compile Include="Serialization\SerializationContextTest.cs" />
    <Compile Include="Serialization\SerializerGeneratorTest.cs" />
    <Compile Include="Serialization\SimpleCollection`1.cs" />
    <Compile Include="Serialization\StringKeyedCollection.cs" />
    <Compile Include="Serialization\TypeWithDuplicatedMessagePackMemberAttributeMember.cs" />
    <Compile Include="Serialization\TypeWithInvalidMessagePackMemberAttributeMember.cs" />
    <Compile Include="Serialization\TypeWithMissingMessagePackMemberAttributeMember.cs" />
    <Compile Include="Serialization\VersioningTest.Cases.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>VersioningTest.Cases.tt</DependentUpon>
    </Compile>
    <Compile Include="Serialization\VersioningTest.cs" />
    <Compile Include="Serialization\_SetUpFixture.cs" />
    <Compile Include="Serialization\ComplexTypeWithNonSerialized.cs" />
    <Compile Include="Serialization\ComplexTypeWithDataContract.cs" />
    <Compile Include="SubtreeUnpackerTest.cs" />
    <Compile Include="UnpackerTest.Ext.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Ext.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackerTest.cs" />
    <Compile Include="UnpackerTest.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Raw.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackerTest.Scalar.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackerTest.Scalar.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackerTest.Skip.cs" />
    <Compile Include="UnpackingTest.Combinations.Array.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Array.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Boolean.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Boolean.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Byte.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Byte.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Double.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Double.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Int16.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int16.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Int32.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int32.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Int64.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Int64.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Map.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Map.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Nil.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Nil.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Raw.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Raw.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.SByte.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.SByte.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.Single.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.Single.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.UInt16.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt16.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.UInt32.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt32.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.Combinations.UInt64.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>UnpackingTest.Combinations.UInt64.tt</DependentUpon>
    </Compile>
    <Compile Include="UnpackingTest.cs" />
    <Compile Include="_SetUpFixture.cs" />
    <Compile Include="TestRandom.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>TestRandom.tt</DependentUpon>
    </Compile>
    <Compile Include="TestSuite.cs" />
    <Compile Include="PackerTest.PackBinary.cs">
      <DependentUpon>PackerTest.PackBinary.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="PackerTest.PackExtendedType.cs">
      <DependentUpon>PackerTest.PackExtendedType.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="UnpackingTest.Scalar.cs">
      <DependentUpon>UnpackingTest.Scalar.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="UnpackingTest.Raw.cs">
      <DependentUpon>UnpackingTest.Raw.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
    <Compile Include="UnpackingTest.Ext.cs">
      <DependentUpon>UnpackingTest.Ext.tt</DependentUpon>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\src\MsgPack.snk">
      <Link>MsgPack.snk</Link>
    </None>
    <None Include="cases.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="cases.mpac">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="cases_compact.mpac">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="DirectConversionTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>DirectConversionTest.Scalar.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.Conversion.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Conversion.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.Equals.Integer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Equals.Integer.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.Equals.Real.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Equals.Real.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.Exceptionals.Conversion.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.Exceptionals.Conversion.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.IsTypeOf.Array.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Array.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.IsTypeOf.Integer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Integer.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.IsTypeOf.Map.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Map.cs</LastGenOutput>
    </None>
    <None Include="MessagePackObjectTest.IsTypeOf.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>MessagePackObjectTest.IsTypeOf.Raw.cs</LastGenOutput>
    </None>
    <None Include="packages.config" />
    <None Include="PackerTest.Pack.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.Pack.cs</LastGenOutput>
    </None>
    <None Include="PackerTest.PackObject.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackObject.cs</LastGenOutput>
    </None>
    <None Include="PackerTest.PackT.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackT.cs</LastGenOutput>
    </None>
    <None Include="PackUnpackTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackUnpackTest.Scalar.cs</LastGenOutput>
    </None>
    <None Include="PEVerify.ps1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Serialization\AutoMessagePackSerializerTest.Types.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AutoMessagePackSerializerTest.Types.cs</LastGenOutput>
    </None>
    <None Include="Serialization\VersioningTest.Cases.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>VersioningTest.Cases.cs</LastGenOutput>
    </None>
    <None Include="TestRandom.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>TestRandom.cs</LastGenOutput>
    </None>
    <None Include="UnpackerTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Ext.cs</LastGenOutput>
    </None>
    <None Include="UnpackerTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Raw.cs</LastGenOutput>
    </None>
    <None Include="UnpackerTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackerTest.Scalar.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Array.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Array.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Boolean.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Boolean.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Byte.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Byte.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Double.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Double.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Int16.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int16.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Int32.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int32.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Int64.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Int64.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Map.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Map.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Nil.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Nil.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Raw.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.SByte.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.SByte.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.Single.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.Single.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.UInt16.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt16.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.UInt32.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt32.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Combinations.UInt64.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Combinations.UInt64.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Common.ttinclude" />
    <None Include="PackerTest.PackBinary.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackBinary.cs</LastGenOutput>
    </None>
    <None Include="PackerTest.PackExtendedType.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>PackerTest.PackExtendedType.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Scalar.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Scalar.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Raw.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Raw.cs</LastGenOutput>
    </None>
    <None Include="UnpackingTest.Ext.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>UnpackingTest.Ext.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\MsgPack\MsgPack.csproj">
      <Project>{5BCEC32E-990E-4DE5-945F-BD27326A7418}</Project>
      <Name>MsgPack</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>